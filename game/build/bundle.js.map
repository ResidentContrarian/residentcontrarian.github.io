{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../cyoa/rot13.js","../../cyoa/state_serialization.mjs","../../cyoa/Link.svelte","../../cyoa/Wrapper.svelte","../../cyoa/url_store.js","../../adventure/helpers/Action.svelte","../../adventure/helpers/Blue.svelte","../../adventure/helpers/Exits.svelte","../../adventure/Absolutes.svelte","../../adventure/Antide.svelte","../../adventure/helpers/Save.svelte","../../adventure/initial_state.js","../../adventure/Container.svelte","../../adventure/Contrack2.svelte","../../adventure/Start.svelte","../../adventure/burn.svelte","../../adventure/burnburnburn.svelte","../../adventure/cartman.svelte","../../adventure/conpsychic.svelte","../../adventure/contrack.svelte","../../adventure/contrack3.svelte","../../adventure/contrack4.svelte","../../adventure/conuncertain.svelte","../../adventure/detrack.svelte","../../adventure/detracklifelimb.svelte","../../adventure/detrackmitigate.svelte","../../adventure/detrackmuddle.svelte","../../adventure/detracknaziactuallylie.svelte","../../adventure/detracknaziactuallytelltruth.svelte","../../adventure/detracksometimesyousin.svelte","../../adventure/detrackwhat.svelte","../../adventure/detrackwhat2.svelte","../../adventure/detrackwhynot.svelte","../../adventure/detractconfork.svelte","../../adventure/knowledgedisregard.svelte","../../adventure/knowledgerespect.svelte","../../adventure/netneglie.svelte","../../adventure/nouncertainlie.svelte","../../adventure/oliempics.svelte","../../adventure/oliempics2.svelte","../../adventure/scalesofgood.svelte","../../adventure/thedeferential.svelte","../../adventure/thegenius.svelte","../../adventure/uncertainlie.svelte","../../adventure/uncertainlie2.svelte","../../adventure/verminism.svelte","../../adventure/virhero.svelte","../../adventure/virneverlie.svelte","../../adventure/viroftenlie.svelte","../../adventure/virseldomlie.svelte","../../adventure/virself.svelte","../../adventure/virtrack.svelte","../../adventure/helpers/ButtonThatLooksLikeALink.svelte","../../adventure/helpers/Inventory.svelte","../../adventure/helpers/Score.svelte","../../cyoa/globbed_adventure.js","../../cyoa/index.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.47.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    if (tag && typeof tag !== 'string') {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","// from https://codereview.stackexchange.com/a/132140/8591\r\n\r\nconst input = `ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789`\r\nconst output = `NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm5678901234`\r\nconst index = x => input.indexOf(x)\r\nconst translate = x => index(x) > -1 ? output[index(x)] : x\r\n\r\nexport default str => str.split(``).map(translate).join(``)\r\n","import rot13 from './rot13.js'\r\n\r\nexport const to_obfuscated_json = value => rot13(JSON.stringify(value))\r\nexport const from_obfuscated_json = string => {\r\n\tif (!string) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\ttry {\r\n\t\treturn JSON.parse(rot13(string))\r\n\t} catch (err) {\r\n\t\tconsole.error(err)\r\n\t\treturn {}\r\n\t}\r\n}\r\n","<script>\r\n\timport { getContext } from 'svelte'\r\n\r\n\timport { to_obfuscated_json } from './state_serialization.mjs'\r\n\r\n\tconst current_page_name = getContext(`current_page_name`)\r\n\tconst adventure_state = getContext(`adventure_state`)\r\n\r\n\texport let to = null\r\n\texport let state = null\r\n\r\n\t$: target_state = state === null\r\n\t\t? $adventure_state\r\n\t\t: state\r\n\r\n\t$: target_page = to === null\r\n\t\t? $current_page_name\r\n\t\t: to\r\n\r\n\tconst is_left_click = event => event.button === 0\r\n\tconst is_modified_by_key_press = event => !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\r\n\r\n\tconst should_intercept_click = event => !event.defaultPrevented\r\n\t\t&& !is_modified_by_key_press(event)\r\n\t\t&& is_left_click(event)\r\n\r\n\tconst name_to_id = getContext(`name_to_id`)\r\n\r\n\t$: link_target_id = name_to_id[target_page]\r\n\r\n\t$: link_target_id || console.error(`No component found named`, target_page)\r\n\r\n\tconst on_click = event => {\r\n\t\tif (should_intercept_click(event)) {\r\n\t\t\t$current_page_name = target_page\r\n\t\t\t$adventure_state = target_state\r\n\r\n\t\t\tevent.preventDefault()\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n{#if link_target_id}\r\n\t<a\r\n\t\thref=\"#?page={link_target_id}&state={to_obfuscated_json(target_state)}\"\r\n\t\ton:click={on_click}\r\n\t>\r\n\t\t<slot></slot>\r\n\t</a>\r\n{:else}\r\n\t<p>\r\n\t\t<slot></slot> <span style=\"color: red\">(There is no page named \"<span style=\"font-family: monospace\">{target_page}</span>\")</span>\r\n\t</p>\r\n{/if}\r\n\r\n<style>\r\n\ta, p {\r\n\t\twhite-space: nowrap;\r\n\t\tpadding: 4px 0;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { setContext } from 'svelte'\r\n\timport { writable } from 'svelte/store'\r\n\r\n\timport Link from './Link.svelte'\r\n\r\n\texport let Container\r\n\texport let name_to_id\r\n\texport let id_to_name\r\n\texport let id_to_component\r\n\texport let page_id_param\r\n\texport let adventure_state\r\n\r\n\tconst update_current_page = page_id => {\r\n\t\tconst new_page_name = id_to_name[page_id]\r\n\t\r\n\t\tif (!new_page_name) {\r\n\t\t\tthrow new Error(`No such page \"${new_page_name}\"`)\r\n\t\t}\r\n\r\n\t\t$current_page_name = new_page_name\r\n\t}\r\n\r\n\tconst current_page_name = writable()\r\n\t\r\n\t$current_page_name = id_to_name[$page_id_param] || `Start`\r\n\t$: update_current_page($page_id_param)\r\n\r\n\t$: $page_id_param = name_to_id[$current_page_name]\r\n\r\n\t$: current_page_id = name_to_id[$current_page_name]\r\n\t$: current_page_component = id_to_component[current_page_id]\r\n\r\n\tsetContext(`name_to_id`, name_to_id)\r\n\tsetContext(`current_page_name`, current_page_name)\r\n\tsetContext(`adventure_state`, adventure_state)\r\n</script>\r\n\r\n<Container\r\n\t{Link}\r\n\tstate={adventure_state}\r\n\t{current_page_name}\r\n>\r\n\t<svelte:component\r\n\t\tthis={current_page_component}\r\n\t\t{Link}\r\n\t\tstate={adventure_state}\r\n\t/>\r\n</Container>\r\n\r\n<style>\r\n\t:global(*) {\r\n\t\tmargin: 0;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t:global(body) {\r\n\t\tcolor: #333;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tbox-sizing: border-box;\r\n\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\r\n\t}\r\n</style>\r\n","\r\n\r\nconst get_params_string_from_browser = () => location.hash.replace(/^#/, ``)\r\n\r\nconst get_param = key => new URLSearchParams(get_params_string_from_browser()).get(key)\r\nconst push_param = (key, value) => {\r\n\tconst params = new URLSearchParams(get_params_string_from_browser())\r\n\tparams.set(key, value)\r\n\tlocation.hash = params.toString()\r\n}\r\nconst replace_param = (key, value) => {\r\n\tconst params = new URLSearchParams(get_params_string_from_browser())\r\n\tparams.set(key, value)\r\n\thistory.replaceState({}, ``, `#` + params.toString())\r\n}\r\n\r\nimport { writable } from 'svelte/store'\r\n\r\nexport const param_store = ({ param_name, replace = false, initial_value = get_param(param_name) }) => {\r\n\tconst { subscribe, set } = writable(initial_value)\r\n\r\n\tconst set_param = replace ? replace_param : push_param\r\n\r\n\tset_param(param_name, initial_value)\r\n\r\n\tconst change_listener = () => {\r\n\t\tset(get_param(param_name))\r\n\t}\r\n\r\n\twindow.addEventListener(`hashchange`, change_listener)\r\n\r\n\treturn {\r\n\t\tsubscribe(cb) {\r\n\t\t\tconst unsubscribe = subscribe(cb)\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener(`hashchange`, change_listener)\r\n\t\t\t\tunsubscribe()\r\n\t\t\t}\r\n\t\t},\r\n\t\tset(value) {\r\n\t\t\tset_param(param_name, value)\r\n\t\t\tset(value)\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const object_serializer_store = ({\r\n\tparam_name,\r\n\treplace,\r\n\tdefault_values,\r\n\tserialize,\r\n\tdeserialize,\r\n}) => {\r\n\tconst { subscribe, set } = param_store({\r\n\t\tparam_name,\r\n\t\treplace,\r\n\t\tinitial_value: serialize({\r\n\t\t\t...default_values,\r\n\t\t\t...deserialize(get_param(param_name)),\r\n\t\t}),\r\n\t})\r\n\r\n\treturn {\r\n\t\tsubscribe(cb) {\r\n\t\t\tconst translator = serialized_value => {\r\n\t\t\t\tconst value = deserialize(serialized_value)\r\n\t\t\t\tcb(value)\r\n\t\t\t}\r\n\t\t\treturn subscribe(translator)\r\n\t\t},\r\n\t\tset(value) {\r\n\t\t\tset(serialize(value))\r\n\t\t},\r\n\t}\r\n}\r\n","<script>\r\n\timport { createEventDispatcher } from 'svelte'\r\n\r\n\tconst dispatch = createEventDispatcher()\r\n\r\n\texport let summary\r\n\texport let selected = false\r\n\r\n\tconst on_click = () => {\r\n\t\tif (!selected) {\r\n\t\t\tselected = true\r\n\t\t\tdispatch(`select`)\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<div data-selected={selected}>\r\n\t<span class=icon>\r\n\t\t{#if selected}\r\n\t\t\t✔\r\n\t\t{:else}\r\n\t\t\t▶\r\n\t\t{/if}\r\n\t</span>\r\n\t<button on:click={on_click}>{summary}</button> {#if selected}<span class=slot><slot></slot></span>{/if}\r\n</div>\r\n\r\n<style>\r\n\t.icon {\r\n\t\tcolor: var(--gray);\r\n\t}\r\n\r\n\t[data-selected=true] .icon {\r\n\t\tcolor: var(--green);\r\n\t}\r\n\r\n\tbutton {\r\n\t\tcursor: pointer;\r\n\t\tcolor: var(--blue);\r\n\t\ttext-decoration: underline;\r\n\t\tborder: 0;\r\n\t\tpadding: 0;\r\n\t\tbackground-color: transparent;\r\n\t\tfont-size: initial;\r\n\t}\r\n\r\n\t.slot {\r\n\t\tdisplay: inline-flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 8px;\r\n\t}\r\n</style>\r\n","<p>\r\n\t> <slot></slot>\r\n</p>\r\n\r\n<style>\r\n\tp {\r\n\t\tcolor: var(--blue);\r\n\t}\r\n</style>\r\n","<div>\r\n\t<h3>Exits</h3>\r\n\r\n\t<div class=exits-list>\r\n\t\t<slot></slot>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\th3\t{\r\n\t\tborder-top: 1px solid var(--gray);\r\n\t\tpadding: 8px 0;\r\n\t}\r\n\r\n\t.exits-list {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 8px;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<p>\r\n\tDo you think that lying is wrong in an absolute sense? I'm not saying \"it's wrong because it always works out to be a net negative, and net negatives are wrong\"; Do you think it's wrong to lie, even when the consequences would be positive? That's it's wrong in an abstract sense, as if it's baked into the definitions of the universe or deemed that way by an ultimate authority of some kind?\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=contrack>No, I don't think morality works off an abstract list like that.</Link>\r\n\t<Link to=detrack>Yes, that's how morality works; some wrong things carry their wrongness with them.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>OK, you chose one of the weird tracks. What happens from here is at least partially your own fault. \r\n</p>\r\n<p>Imagine you hear a knock at your door, and you open it up to find your stoop occupied by a group of Izans, which are backwards Nazis. They want to tell them where a nearby fugitive group of Jews are, so they can take them to their futuristic utopian city and help them thrive while enjoying perfect freedom and friendship. This is good timing, because there's actual Nazis in the neighborhood; if you don't tell the Izans where the family is hiding, the Nazis will probably get to them first and kill them. \r\n</p>\r\n<p>Do you...\r\n</p>\r\n<p>You know what? No. This is dumb. Not because of your morality system but because this is going to be exactly the same as the deontology track. You can just go <Link to=detrack>here</Link> and palette-swap everything to fit your weird pro-lying deontology preference, and I save four hours.\r\n</p>\r\n<p>I understand that this might make you feel shortchanged, so:\r\n</p>\r\n\r\n<h2>You are a Madlibs Honesty Obstructionist.</h2>\r\n\r\n<p>In a super-wacky way, you have taken out all the names of other value system's virtues, replaced them with underscores, and are now sitting in a TGI Fridays wondering how best to <i>rock your parent's comic world</i> before the appetizers are served.</p>\r\n\r\n<p>Unless you are a confused consequentialist who just thinks lying consistently produces good outcomes, you are a sort of a dark-link version of everyone else. If you are a virtue ethicist, you just think being a liar is a good state; if you are a deontologist, you probably are in some loki-based religion or something.</p>\r\n\r\n<p>Your funny coded category name is MALI HOOBS.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again, and I've ignored the \"here\" link above! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>","<script>\r\n\texport let Link, state, current_page_name\r\n\r\n\t$: current_saves = $state.saves\r\n\r\n\tconst get_state_with_new_save = (current_page, current_state) => {\r\n\t\tconst { saves } = current_state\r\n\t\tconst new_saves = [\r\n\t\t\t...saves,\r\n\t\t\t{\r\n\t\t\t\tpage: current_page,\r\n\t\t\t\tstate: current_state,\r\n\t\t\t},\r\n\t\t]\r\n\r\n\t\treturn {\r\n\t\t\t...current_state,\r\n\t\t\tsaves: new_saves,\r\n\t\t}\r\n\t}\r\n\r\n\t$: current_saves_with_preserved_save_states = current_saves.map(\r\n\t\t({ page, state }) => ({\r\n\t\t\tpage,\r\n\t\t\tstate: {\r\n\t\t\t\t...state,\r\n\t\t\t\tsaves: current_saves,\r\n\t\t\t},\r\n\t\t}),\r\n\t)\r\n\r\n\tconst get_restore_state = state => ({\r\n\t\t...state,\r\n\t\tsaves: current_saves,\r\n\t})\r\n\r\n</script>\r\n\r\n<span>\r\n\t{#if current_saves.length < 3}\r\n\t\t<Link state={get_state_with_new_save($current_page_name, $state)}>\r\n\t\t\tSave current status\r\n\t\t</Link>\r\n\t{/if}\r\n\r\n\t<div style=\"white-space: normal;\">\r\n\t\t{#if current_saves.length > 0}\r\n\t\t\t({#each current_saves as {page, state}, i}\r\n\t\t\t\t<Link to={page} state={get_restore_state(state)}>Load save {i + 1}</Link>{#if i < current_saves.length - 1}, {/if}{/each})\r\n\t\t{/if}\r\n\t</div>\r\n</span>\r\n\r\n<style>\r\n\tspan {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t}\r\n</style>\r\n","export default {\r\n\tretrieved_the_cat_eye_glasses: false,\r\n\tsweeped_up_the_hallway: false,\r\n\trescued_the_freshman: false,\r\n\treturned_the_cat_eye_glasses: false,\r\n\tunlocked_your_locker: false,\r\n\tlocker_unlock_attempts: 0,\r\n\thanded_in_your_english_homework: false,\r\n\tvisits_to_library: 0,\r\n\tsaves: [],\r\n\tcarrying: {\r\n\t\teyeglasses_case: false,\r\n\t\tcat_eye_glasses: false,\r\n\t\tbucket: false,\r\n\t\tbroom: false,\r\n\t\thomework: false,\r\n\t\tbook: false,\r\n\t},\r\n}\r\n","<script>\r\n\timport Save from './helpers/Save.svelte'\r\n\timport initial_state from './initial_state.js'\r\n\r\n\texport let Link, state, current_page_name\r\n</script>\r\n\r\n<div class=container>\r\n\t<div class=section>\r\n\t\t<slot></slot>\r\n\t</div>\r\n\r\n\t<footer>\r\n\t\t{#if $current_page_name === `Score`}\r\n\t\t\t<span class=currently_on>Score</span>\r\n\t\t{:else}\r\n\t\t\t<Link to=Score>Score</Link>\r\n\t\t{/if}\r\n\r\n\t\t{#if $current_page_name === `Inventory`}\r\n\t\t\t<span class=currently_on>Inventory</span>\r\n\t\t{:else}\r\n\t\t\t<Link to=Inventory>Inventory</Link>\r\n\t\t{/if}\r\n\r\n\t\t<Save\r\n\t\t\t{Link}\r\n\t\t\t{state}\r\n\t\t\t{current_page_name}\r\n\t\t/>\r\n\r\n\t\t<Link to=Start state={initial_state}>\r\n\t\t\tReset\r\n\t\t</Link>\r\n\t</footer>\r\n</div>\r\n\r\n<style>\r\n\t.container {\r\n\t\tmin-height: 100vh;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: space-between;\r\n\r\n\t\tmax-width: 800px;\r\n\t\tmargin-left: auto;\r\n\t\tmargin-right: auto;\r\n\t\tpadding: 16px;\r\n\r\n\t\twhite-space: normal;\r\n\r\n\t\t--blue: #3939ff;\r\n\t\t--green: #00a800;\r\n\t\t--gray: #939393;\r\n\t}\r\n\r\n\t.section {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 16px;\r\n\t}\r\n\r\n\tfooter {\r\n\t\tpadding-top: 16px;\r\n\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.currently_on {\r\n\t\tfont-weight: 700;\r\n\t}\r\n\r\n\t.container :global(p),\r\n\t.container :global(button),\r\n\t.container :global(a) {\r\n\t\tfont-size: 16px;\r\n\t}\r\n\r\n\t.container :global(hr) {\r\n\t\tcolor: var(--gray);\r\n\t}\r\n</style>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>OK, got it. Now, do you think lying is wrong (or right) because it either <i>has a tendency to make you worse (or better!), in terms of your value as a person</i> or indicates that you <i>are worse (or better!), in terms of your value as a person, than some hypothetical perfect person who chooses not to lie?</i> That lying isn't wrong or right as such, but instead is a potentially neutral action that really, really top-notch people do or don't do?\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=virtrack>Yeah!</Link>\r\n\t<Link to=contrack3>No.</Link>\r\n</Exits>\r\n","<script context=module>\r\n\timport initial_state from './initial_state.js'\r\n\r\n\texport {\r\n\t\tinitial_state,\r\n\t}\r\n</script>\r\n\r\n<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n</script>\r\n\r\n<h2>What is Lying?</h2>\r\n\r\n\t<p>\r\n\t\tI'm interested in concepts related honesty and lies. If you are here, you probably are too, even if only a bit. \r\n\t</p>\r\n\t<p>\r\n\t\tThis is an exercise in defining a conceptual space. I want to give people an opportunity to sort of walk through the exact thoughts they have on lying - what makes it right, what makes it wrong, when they do it - as opposed to actually telling them I think about it. \r\n\t</p>\r\n\t<p>\r\n\t\tI'm going to try to keep judgment from leaking through too much, but I'm sure it will some places. Feel free to mentally eat around that particular patch of mold; again, I'm trying to make a tool for defining your own views on honesty, not mine.\r\n\t</p>\r\n\t<p>\r\n\t\tWith all that said, let's get going!\r\n\t</p>\r\n\r\n\t<Exits>\r\n\t\t<Link to=Absolutes>Let's go!</Link>\r\n\t</Exits>","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<p>You are trying to make... bad consequences? Anti-Utility?\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=burnburnburn>Yes. I mean, look at those weak-ass utilitarians, with their \"most good for the most people\" weirdness. You know what EA stands for? Extremely annoying. I'm stronger than that. I understand. Consequences? I'll show them Consequences. I'll show them consequences like those weaklings never, ever imagined. When the fires my lies have lit rise up to consume this ruined world, I will laugh. The peals of my laughter will usher in the <i>barren age.</i></Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a Kindof Crazy A-Hole.</h2>\r\n\r\n<p>Alternate title: Negative-Outcome Maximizing Logical Consequentialist.\r\n</p>\r\n<p>When they were passing out definitions of <i>Good Consequences</i>, you said \"No thanks - brought my own.\". You consider others something like bacteria that need to be sterilized away with dishonesty, and then put the \"lie\" in \"Human-Grade Lysol\" and get to work. </p>\r\n<p>I suspect that outside of mental illness, not many people like you actually exist in a thought-out-and-intentional way. I think it's more likely in one-off situations, i.e. a lie intended to screw over one particular guy or one particular group of people. I only know of one person who superficially appears to have lied on a long timescale with the thought of \"let's kill as many people in my outgroup as possible\", and any names used in this article are very likely to be unrelated to him.\r\n</p>\r\n<p>Your funny coded category name is FORMERFDACTPDIRECTORMITCHZELLER.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a Do-What-I-Want Chaos-Monster.</h2>\r\n\r\n<p>Well, kind of. Chaos-Monster is a little strong, and a little inaccurate.\r\n</p>\r\n<p>The deal here is that you are mostly not concerned with lying or not lying so much as you are with making sure things turn out well for you. And I want to be really honest here: There's probably more people in your group than any of the others in this whole survey. I don't think it's <i>great</i>; neither do you when I put it in these terms. But at the same time, there's an awful lot of people in this group; it takes active work to get out of this category, and like most things that take active, extra effort most people don't end up actually doing it.\r\n</p>\r\n<p>What sets you apart (and makes you a little better) is that you actually are (presumably) honest about it. All the other groups - deontologists, consequentialists, virtue ethics folks - have plenty of people who have adopted a moral system only in the sense that it's their favorite one. It doesn't drive action for them. It doesn't necessarily drive action for you, either, but at least you aren't a hypocrite about it.\r\n</p>\r\n<p>Your funny coded category name is CARTMAN.\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<p>You are a mentat or in some way gifted with prescience, and can thus pretty well predict what's going to happen in the future as a consequence of your lie. Because you are also a consequentialist, this means you know the moral implications of every lie to a high level of fidelity. \r\n</p>\r\n<p>That seems like it should be it, since we've covered that you don't think lying is intrinsically right, that you don't just lie because you feel like it; all that's really left is lying because some level of net utility convinces you it's worth it. \r\n</p>\r\n<p>Here's one last wrinkle, though. Say James has once again given you call to maybe-lie by asking why people don't like him. In your omniscience, you have determined that him knowing that it's because he doesn't bath would be net-negative to him. You don't think that it would hurt anyone else if he knew, and you yourself don't mind telling him besides the net-negative thing.\r\n</p>\r\n<p>James himself has been very, very clear in the past that his preference is to always hear the truth if at all possible; you know to a reasonable level of certainty he'd actually be mad later if he found out you lied to him. In this scenario, do you respect James' preference, or do you opt to do what you think will maximize his utility?\r\n</p>\r\n<p>\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=knowledgedisregard>Of course I don't - I think it's wrong to not maximize utility, we've covered this.</Link>\r\n\t<Link to=knowledgerespect>Of course I don't - you can't <i>completely</i> disregard the desires of others.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<p>OK, you've reached what will be, for most people, the consequentialist track of this thing. But before we can assume that 100%, we need to eliminate some outliers. Believe me that it's much easier to do this now than later. So, first: Do you think lying is inherently right? We already ruled out the idea that lying is intrinsically wrong in a self-contained-morality-of-act way; do you think the opposite is true, and that lying is always right? That the rightness of lying is baked into lying itself?\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=Contrack2>What? No, of course not.</Link>\r\n\t<Link to=Antide>Yes.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<p>We are now mostly on the consequentialist track, but there's just a little more weirdness to sort through:\r\n</p>\r\n<p>Do you privilege yourself and your desires/benefit above others when choosing to lie or not lie? Now, I don't mean just a bit - I think everyone probably does just a bit. I'm talking more about a very significant bias towards yourself that shows itself whenever you choose to lie. So if James-The-Unwashed-Killer-of-Vibe was asking you why he didn't get invited to the party, you might or might not privileged yourself (in avoiding the awkwardness of telling him, or in telling him and getting to bask in his sorrow) over things like the greater, society-wide consequences.\r\n</p>\r\n<p>Again, everyone does this kind of stuff a little; it's very, very hard not to. I'm more asking if it's the primary driver of the decision in a way that usually predicts your eventual action.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=contrack4>No; I either don't consider my own wants at all or don't treat them as my primary decision criteria when lying.</Link>\r\n\t<Link to=cartman>Yes; if you looked at a spreadsheet of my lies, the majority of them would line up exactly with what I wanted to do anyway.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>OK, thanks for bearing with me. We are now properly and fully on the consequentialist track.\r\n</p>\r\n<p>You've indicated that you don't think lies are bad because lies themselves are inherently bad, which pretty much knocks out all forms of deontology. You've also indicated that you don't think that lies are bad because of the kind of person they imply you are or make you into, which mostly knocks out virtue ethics. In terms of big, comprehensible moral structures, that pretty much leaves us with consequentialism. Which is tough on me, because there's far more branches to consequentialism than any other way we could go here.\r\n</p>\r\n<p>So first: Consequentialism thinks that actions are wrong or right based on their consequences. Can you, through some kind of predictive power, know what the future consequences of any given action are 100% of the the time, or close to it?\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=conpsychic>Pretty much, yes.</Link>\r\n\t<Link to=conuncertain>No, I can't.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<p>To be very clear, you've chosen wisely here. The guys who are claiming they know the outcomes in advance? They aren't even full of shit. They are just clicking that link to see how I handle it. I'm going to reward you by saving you time and just telling you: I handled it <i>poorly.</i> Turns out this choose-your-own-adventure stuff is a lot of work.\r\n</p>\r\n<p>OK, so, given that you aren't sure of the consequences, does that uncertainty stop you from lying? Like, say you've got less than 75% certainty the lie is going to be net-good. Do you still lie?\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=nouncertainlie>No, I only lie when I'm pretty damn sure it's going to cause some good.</Link>\r\n\t<Link to=uncertainlie>This is still a net positive for our great city. I'm lying here.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>So the belief that lying is abstractly wrong - wrong at an act-level, as opposed to wrong at a consequences-level, is a pretty strong stance. Is that stance conditional?\r\n</p>\r\n<p>\r\n\tLike, assume (as we often must) a Nazi Germany situation. You know the location of a Jewish family, and a Nazi asks you where they are so he can go round them up and ship them to near-certain doom. If you tell the complete truth, they die; if you lie about where they've gone, he won't find them and will just assume they got away. If you truthfully say you know where they are but refuse to tell, they will torture the information out of you and then kill you. Is it still wrong to lie?\r\n</p>\r\n<p>\r\n\tNote that what I'm trying to get at here is the situation that justifies lying the most. If you can think of one that does that better, sub it in. You have full permission to create scenarios where not lying immediately causes the heat death of the universe or whatever floats your boat here.\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=detrackwhat>Yes.</Link>\r\n\t<Link to=detrackwhynot>Well, no, not then, obviously.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a Life-and-Limb Anti-Lying Conditionalist.</h2>\r\n\r\n<p>You basically think lying is absolutely wrong, except you have some semantics-based exceptions for what \"lying\" is. Luckily, it's only one exception, and it mostly makes sense that you'd choose the one you did. This is a pretty easy way to resolve the whole \"I'd lie, and lying is bad, but this isn't somehow\" paradox. If someone would be seriously endangered by you not lying, you do it. The last metroid is in captivity. The galaxy is at peace.\r\n</p>\r\n<p>This doesn't really tell us anything about whether or not you lie in <i>practice,</i> though. In some other branches we dig into that a little more, but here we will just note that perceptions of morality don't always align with moral practice and leave it at that.\r\n</p>\r\n<p>Your funny coded category name is LILIANCO.\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<p> So, if you got here, you are very likely working up to saying a particular thing related to the definition of the word \"lie\" itself. If what I say after this doesn't track with what you were thinking, go back and try an different option; I should have most of them covered in one way or another.\r\n</p>\r\n<p>The way I understand this stance is something like this: We don't usually consider someone who kills someone else in self-defense to be a murderer. It's <i>killing,</i> yes, but not murder; the situation is different enough that we need a different word to cover them. And usually the same is true of things like, say, killing a mass-murdering Nazi in defense of innocents, or stuff like that.\r\n</p>\r\n<p>If it applies to killing, it should probably apply to things like lying, too; if anything it's a lower-impact way to get the whole \"save a life\" thing done. Since it's not quite the same thing, it opens up the possibility of saying \"lying is always a sin, but this isn't lying really; we just don't have a good term for lying in self-defense\".\r\n</p>\r\n<p>Two questions for you:\r\n</p>\r\n<ol><li>Is that close to what you were thinking?</li><li>Is this true just with situations we'd normally think of as self-defense, or other things as well?</li></ol>\r\n\r\n<Exits>\r\n\t<Link to=detracklifelimb>Yes, that's what I meant. I don't think there are any other exceptions.</Link>\r\n\t<Link to=detrackmuddle>Yes, that's about what I mean, but I can think of other exceptions that make lies into not-lies.</Link>\r\n\t<Link to=detrackwhynot>This isn't what I meant. Take me back a page.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>Ugh. You are a complex thing that has a big enough range I'm not going to try to name it or dig any deeper.</h2>\r\n\r\n<p>So despite the \"Ugh\", I'm not judging you. It's just that doing your category justice involves a lot of work I don't want to do. The thing about you is that depending on how many exceptions you have, you range from something like \"A person who thinks lying isn't wrong when it saves a life, and perhaps a few other similarly serious situations\" to \"Confused consequentialist\".\r\n</p>\r\n<p>Figuring out what you are exactly would take time. Time we don't have. And it wouldn't really be worth it because basically all we are doing is counting the number of exceptions to the rule here. Again, it's not that this is especially bad in any way, it's just that I have to write a bunch of these entries and get this published before people start complaining about me being inconsistent again.\r\n</p>\r\n<p>Your funny coded category name is MUDDLESTUMP.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>OK, you've indicated that you are going to lie to the Nazi here; that's definitely not all downsides, since your neighbors live. But why did you lie? \r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=detractconfork>At some point, the consequences outweigh the rightness or wrongness of the action. In this case, people were going to die; I think my action wasn't wrong considering that.</Link>\r\n\t<Link to=scalesofgood>The action of lying is wrong, and no amount of consequences can nullify that. But lying here seems like it would break some higher-order rules; I think \"thou shalt not lie\" just got outranked here.</Link>\r\n\t<Link to=detracksometimesyousin>Actually, it's neither. I think that lying is morally wrong in this case, I just couldn't face the music of living up to my moral ideals.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a full-stop anti-lying absolutist.</h2>\r\n\r\n<p>When you were a kid, your parents took you to see <i>Space Jam</i> and as you left the theater a lie shot them both dead. Using the extensive Veritas family fortune, you trained your body, mind, and soul for revenge.  \r\n</p>\r\n<p>The point of this branch was to set up a scenario where a lie was as justified as possible. Life-and-limb were at stake and the person being lied to was both terrible and deserved it (if anyone does). But for you there are no gray areas, just one very bright line you won't cross. The only way to get you to lie is to perhaps trap you in a logical overflow error like an evil computer from <i>Star Trek</i>.\r\n</p>\r\n<p>This isn't completely fair, but you are one of the few categories who I assumed lied to get here. The claim here is pretty close to \"I never lie\". \"Not lying at all\" is actually pretty tough compared to \"Not lying much\", so I tend to hear claims that one never ever lies with a sceptical, suspicious ear.</p>\r\n<p>Your funny coded category name is FUANLYAB.\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are an Imperfect Anti-Lying Absolutist.</h2>\r\n\r\n<p>You think the action of lying is wrong, full-stop. The consequences of a lie (or of telling the truth) aren't included in the formula you use to calculate the rightness of the action. Somewhere in your universe, there's a stone slab with \"lying is always wrong\" carved into it, and you think the slab is right.\r\n</p>\r\n<p>With that said, you admit you will actually take the sin-hit and lie in at least some circumstances - for instance, when someone's life is at stake. You might (or might not!) actually lie kind of a lot, but that's an admission you are making about your own imperfection.\r\n</p>\r\n<p>It's worthwhile to note that you are different from someone who has exceptions they believe remove the wrongness from the lie; that exists in a couple different forms in this game, but you aren't it. Bear in mind I'm not judging at all here; \"I think lying is always wrong, but I do it sometimes anyway because I'm not perfect\" is about the strongest claim a person can make about lying that I easily believe.\r\n</p>\r\n<p>Your funny coded category name is IMANLABS.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>Really? This is a nice family. Let's say Nazis are the abstract-concept version of Nazis; there's no reasoning behind what they are doing, no justifications at all besides doing bad things to good people. Is it still wrong to lie to save them?\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=detrackwhynot>Oops, no, misclick.</Link>\r\n\t<Link to=detrackwhat2>Yes, Still.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>\r\n\tWow, OK, got it. \r\n</p>\r\n<p>\r\n\tAs previously noted, the assumption here is that this is the worst-case scenario; by saying it's wrong to lie here, you are saying it's wrong to lie in any stand-alone situation whatsoever. But that's what you believe is right or wrong, not what you'd actually do.\r\n</p>\r\n<p>\r\n\tTaking as a given that you think it would be wrong to lie here, what do you think you'd actually do in this situation?\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=detracknaziactuallytelltruth>I'd tell the truth. A lie is a lie, and it's wrong to lie.</Link>\r\n\t<Link to=detracknaziactuallylie>I think I'd actually probably lie here.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<p>Why not? You told me lying was abstractly wrong a minute ago; what changed?\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=detrackmitigate>It's not exactly lying at that point.</Link>\r\n\t<Link to=detracknaziactuallylie>It's not really wrong at that point, or something like that.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>Listen, man. To the extent there's defined sides of this quiz, you are essentially on the deontology side. That's supposed to be the easy side for me to write! Here you come, being all weird about it, and now you probably want me to branch off into like ninety different forks to capture whatever weird quibble you have about this. I have a tree outside that has branch problems; this guy from church named Hector helped me cut off some of it but he's telling me I need to hire an arborist or something to make sure I don't lose the tree.\r\n</p>\r\n<p>\r\nYou think I want MORE branch problems, even if they are in this test? Nope.\r\n</p>\r\n<p>\r\n\tIn the first page of this, I asked if you thought lying was absolutely wrong, and in the last page I gave you two ways to resolve your whole thing that didn't threaten that absolutism. Then you told me you think things are wrong conditioned on their consequences!\r\n</p>\r\n<p>\r\n\tI'm kicking you out of the deontology side of the test. You have been banished to consequentialism. And so help me, if I hear so much as another word, I'm sending you to the Labyrinth of a myriad myriad words. This is a place where meaning is eschewed in favor suffering, a place where letters are assembled as if by diabolists bent on creating an exitless hell of mastubatory prose, a place where there is nothing to be learned and the only escape is death.\r\n</p>\r\n<p>\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=contrack>...</Link>\r\n</Exits>\r\n<a href=https://www.amazon.com/dp/B09PDRBVHL>Wait! I really think you should consider this...</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>Your are an Omniscient Consequentionalist Paternalist.</h2>\r\n\r\n<p>You care about consequences, and only consequences. You know all outcomes, and only all outcomes. Where people say they prefer to know the truth, consequences be damned, you know better and enforce your will upon them lest they lead themselves astray.\r\n</p>\r\n<p>There's a few different end-states in this project that I basically suspect don't exist in real life; this is one, for reasons you probably find clear. But I feel like this is also a situation which would come up in thought problems, since the level to which you can predict outcomes is pretty important to how viable consequentialism is as a moral system. \r\n</p>\r\n<p>There's other endings where the liar is disregarding the wishes of the lied to, but for the record I like this one more than most of them; at least here the person is pretty certain they are maximizing utility, even if they might be mistaken.\r\n</p>\r\n<p>Your funny coded category name is PAPAOMNICON.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>Your are a Laissez-Faire Omniscient Consequentionalist.</h2>\r\n\r\n<p>You care about consequences, and only consequences. You know all outcomes, and only all outcomes. Where people say they prefer to know the truth you respect that, outcomes be damned.\r\n</p>\r\n<p>As in some other cases, I don't actually believe you can predict the future. Probably neither do you. As stated elsewhere, though, this is just a good thought problem category so I'm leaving it in. I sometimes wonder if some people aren't mentally editing \"and this is a knowable thing you can know\" to the end of the \"The good of an act is determined by its consequences\" short description of consequentialism. I don't know if they are or aren't, but I know it's the first stop on strawman-tour of the whole deal.\r\n</p>\r\n<p>Your funny coded category name is PAPAOMNICON.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<p>The narrator shifted uncomfortably in his seat. He had heard about cases like this in interactive non-fiction school, but had never expected to see one in the wild. Suddenly all he wanted was to put too much sriracha in a instant noodle cup, curl up on his couch, and forget the surprising and diverse dangers of the world around him.\r\n</p>\r\n<p>He eyed the test-taker warily, like a hunter eyes a cornered bear with a liberal arts degree. \"Why is that?\" he asked, keeping his voice even and soothing.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=oliempics>I'm training!</Link>\r\n\t<Link to=burn>Because screw them, that's why.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a Risk-Averse Consequentialist.</h2>\r\n\r\n<p>You think that it's basically OK to lie, or at least not definitionally bad. When you have the strong expectation that your lies will produce good, you do it. No worries. There's only one problem: You are skittish like a tiny baby bunny.\r\n</p>\r\n<p>If you were a cold, cool calculation machine, you'd be comfortable lying or not lying at even good/bad odds based on personal preference alone. But something is holding you back - either you think that people illogically don't like people trying to deceive them and might unfairly villianize you for your well-meaning trickery, or you have some cultural aversion to lying sticking to your brain like a faux-righteous stain, or something.  \r\n</p>\r\n<p>The point is that I'm going to need you to toughen up, my friend. When you break some eggs, you can't run away just because <i>omelettes are happening.</i>\r\n</p>\r\n<p>Your funny coded category name is GETSOMETHICKERSKINYOUCOWARD.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>Training?\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=oliempics2>Yeah, like, the deal is you said directly stemming from that lie. And yes, that can be interpreted to mean basically anything that happens in the future at all. But in terms of what I could reasonably track off this lie, it might be a net negative at least in terms of what I could see. But what if there was a \"big score\" on the way, so to speak? I want to keep sharp. I don't want my deceptive capacities dulled by infrequent use. I want to be ready for that one big lie that changes the world.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a Long-Termist Dishonesty Prepper Consequentialist.</h2>\r\n\r\n<p>You think most people only get one big shot at joining the big show. You are like Eminem in eight mile, waiting for you big break. Training. Meditating. Growing. The big difference is that you aren't going to rap at the opportunity so much as you are going to lie at it.\r\n</p>\r\n<p>Like a person shooting random passers-by from his balcony to dull his emotions in anticipation of an expected eventual <i>Red Dawn</i> situation, you are trading more certainty of benefit now for black-swan sort of payout at the end of the road. Like a boyscout, you are ready; unlike a boyscout... well, you get it.\r\n</p>\r\n\r\n<p>Your funny coded category name is OLIEMPIAN.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a scales-of-good pure deontologist.</h2>\r\n\r\n<p>You are a pure deontologist; you think rules are rules, and that breaking or obeying them is what determines the goodness of your actions. But you've found that sometimes rules conflict with each other, and when that happens things get weird for you.\r\n</p>\r\n<p>In this case, you've been pretty consistent that you think that lying is wrong. But you also indicated that something like \"letting your neighbors get holocausted\" seems <i>more wrong</i> to you, so you don't do it. On net, you come out ahead - not so good as if you weren't asked to lie at all, but not as bad as setting murders on the track of good folks. This differs a bit from consequentialism in that you still feel like you did something wrong; where they'd go \"whoo! utility maximized!\", you still feel bad; you sinned, just not maximally so.\r\n</p>\r\n<p>As with all systems where your judgment is a significant input, this can get risky. If the system providing your rules to you has a clearly defined hierarchy, that's easy. But if you are making the severity-of-sin choices yourself, you run into the risk that all flexible-sytem users do - that you eventually acclimate to the flexibility and end up a deontologist in name only. \r\n</p>\r\n<p>Your funny coded category name is SCAPUDE.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a Logical Consequentialist Desire Acknowledger.</h2>\r\n\r\n<p>Where it makes sense to lie, you trust your own judgment and lie. Someone might ask why you are so certain, but it almost doesn't matter on a case-by-case basis; after all, what better judgment could you have at any given moment than your best judgment? Not every situation allows for days of research. You do the best you can.\r\n</p>\r\n<p>That said, there's an exception: When someone assures you that their utility would suffer from your dishonesty, you tend to take their word for it. Not only do they have the potential of knowing something you don't (since they are so close to the situation), they also \"own\" some of the benefit, and you think it's theirs to take or not take based on their own preference.\r\n</p>\r\n<p>There's a version of you (one page back, take the other option) who <i>doesn't</i> think the person you are lying to should get any say in the matter. He's probably a bit more logical in terms of what you'd expect from the cold hard definitions of Consequentialism as a moral system, but I suspect your category has more members than his; not everyone wants to brave the kind of ignorant, lie-hating reactions they would have to weather if their lies were known.\r\n</p>\r\n<p>Your funny coded category name is THEDEFERENT.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a Logical Consequentialist Dictator.</h2>\r\n\r\n<p>You are a pretty stock interpretation of a Wikipedia-level understanding of consequentialism - I know, because that's the level I understand consequentialism at and this is about what I expected from you.\r\n</p>\r\n<p>You will lie any time it seems like there will probably be a net benefit from doing so. You will also, as a bonus, lie to someone who is very clear in telling you they don't want that. This is convenient, since most people don't like being lied to. You are pretty sure you are smarter than them, even to the point where your second-party information disadvantage mitigates their first-party knowledge of their own situation. You also don't put weight on their preference and desires, or at least not enough to keep you from doing what you decided was right anyway.\r\n</p>\r\n<p>Your funny coded category name is THEGENIUS.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>To save time, I'm going to assume that your answer to the last question means you would probably lie down to some threshold reasonably close to 50% certainty of net-good outcomes. And listen: I'm sure there's some complexity here I'm missing, but the superficial implication of consequentialism-takes on lying is sort of that this is the right call; if you are optimizing for outcomes, you lie when it seems like it's going to make good outcomes. Whether or not I like the system, I get that this makes sense within it.\r\n</p>\r\n<p>With that said, we now have to take a short intermission to eliminate one last weird outlier: Would you lie if the chances of net-good consequences directly stemming from that lie were LESS than 50%?\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=uncertainlie2>No, I wouldn't lie in that situation.</Link>\r\n\t<Link to=netneglie>Yes, I would lie at a less-than-50% good-consequence certainty.</Link>\r\n</Exits>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<p>One last thing: The preferences and opinions of of those you are lying to.\r\n</p>\r\n<p>You are working in a system of uncertainty. People disagree on things in uncertain systems, and one such disagreement you might run into is a a person who believes his utility is severely diminished by you lying to him. For instance, he may ask if a food contains a certain ingredient you think is harmless but he thinks is harmful. It might be something with lower or higher stakes than that.\r\n</p>\r\n<p>In instances where the person has made it clear they don't think they'd get net utility from you lying to them (and where no other factors but your and their utility is considered), do you consider your thought-out utility calculation to be more valid than theirs in a way that often would lead you to lie anyway?\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=thegenius>I didn't make the calculation based on nothing, man. The calculation <i>is</i> my decision.</Link>\r\n\t<Link to=thedeferential>No, I'd respect their wishes.</Link>\r\n</Exits>","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are an Ethics-of-Care Virtue Ethicist, which is basically just a Consequentialist.</h2>\r\n\r\n<p>OK, so let's get a bit meta here.\r\n</p>\r\n<p>I've been digging into various moral systems for a few months now as a bit of a refresher, and of deontology, consequentialism, and virtue ethics, virtue ethics is the one I understand the least. I think that's partially by design; virtue ethics isn't really a moral system as I usually understand it. Where deontology and consequentialism both seek to define <i>good,</i> virtue ethics really doesn't. Instead of this, it tells you to find or imagine someone who is successful, and do what they'd do. Douglas Adams once created a character named Dirk Gently who would, rather than know where he was going, would find someone who was driving like they knew where <i>they</i> were going, and he'd then just follow them hoping to get the same outcomes they looked set to get. This is a LOT like that.\r\n</p>\r\n<p>Or rather it would be, except you chose the one side of virtue ethics that actually makes a more-than-half-hearted attempt to define virtues. The deal is that at some point feminists looked at the vaguely-defined virtues that most male philosophers picked, got pissed, and much more strictly defined a set of virtues they thought to be feminine-coded. That means that you've chosen a very specific set of virtues that all come down to nurture, care, and self sacrifice - essentially, the goodness of your actions is determined by how well they promote the good of \"helping James\".\r\n</p>\r\n<p>Fortunately or unfortunately, that means that your moral system is <i>identical in every way</i> to consequentialism. Where other forms of virtue ethicists look inwards at who they'd like to be and act based off that, you <i>say</i> you are doing that, but then tether your moral goodness entirely to someone else's outcomes, such as you can influence them.\r\n</p>\r\n<p>This isn't bad - for the record, I actually like this at least as much as other forms of virtue ethics. \r\n</p>\r\n\r\n<p>Your funny coded category name is CONCAVE.\r\n</p>\r\n\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>So you have this theoretical or actual role model who, basically, you trust to do things correctly; you look to what they do and imitate them. Got it. But the next relevant thing seems to be asking this: What kind of person are they? \r\n</p>\r\n<p>In this case, we could make arguments in favor of lying by saying \"My role model would probably err towards honesty here for the sake of being a reliable person.\". Or \"My role model would seek to peacekeep\", or even \"My role model tends to avoid hard truths at all costs because X\" where X is any reasoning that thinks that James should figure out about soap on his own time.\r\n</p>\r\n<p>What's the preference here?\r\n</p>\r\n<p>(Full disclosure: It doesn't matter that you picked an actual or theoretical third party here; it leads to the same options as if you didn't. I just wanted you to think about it.)\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=virneverlie>They NEVER lie. They are a perfect person.</Link>\r\n\t<Link to=virseldomlie>They RARELY lie. They are a perfect person who adjusts his actions to suit the situation, but he has a strong bias towards truth.</Link>\r\n\t<Link to=viroftenlie>They OFTEN lie. They are a perfect person who considers things situationally, and acts mostly in accordance to what they think will produce great outcomes</Link>\r\n</Exits>","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a Ideal-Seeking Anti-Lie Idealist.</h2>\r\n\r\n<p>Basically you don't think lying is wrong so much as you think that people who lie aren't living their best lives or being the best people they could be. Every lie moves them further from that ideal, and thus every lie is wrong.\r\n</p>\r\n<p>There's a passage of the Bible (the book of James) that talks a bit about how works don't grant Christian salvation, but the kind of Faith that does grant access to salvation has other implications, one of which is motivating works. Your approach to lying is sort of like that; you don't care about lying that much, but you do care about being a really top-notch guy. If it turns out that really top-notch guys don't lie a lot (and you don't think they do), that motivates you to lie less. \r\n</p>\r\n<p>I can hear you saying something like \"this whole section is really lame and non-specific!\", but I assure you that's not my fault. It turns out the whole field of virtue ethics is basically something like \"good people do things that good people do!\", where \"good\" is defined in a way much closer to <i>successful and satisfied</i>. Essentially it asks you to imagine what you want people to say at your funeral, and work backwards from there. Whether you do this by imagining an idealized version of yourself or by following in the footsteps of an impressive rolemodel Wenceslas-style is mostly left up to you.\r\n</p>\r\n<p>Most of this description is going to be copied to a few other variants on this theme with some minor tweaks. Don't be peeved at me. \r\n</p>\r\n<p>\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a Ideal-Seeking Lie-comfortable Pragmatist.</h2>\r\n\r\n<p>You don't think lying is wrong, full-stop. If your ideal image of yourself didn't lie much you'd think that lying a lot was wrong because it took you further and further from being that guy, but your ideal image of yourself is a pragmatist who leaves themselves with a lot of flexibility to deal with situations as they come on a one-off basis.\r\n</p>\r\n<p>There's a passage of the Bible (the book of James) that talks a bit about how works don't grant Christian salvation, but the kind of Faith that does grant access to salvation has other implications, one of which is motivating works. Your approach to lying is sort of like that; you don't care about lying that much, but you do care about being a really top-notch guy. Some closely related categories think that lying takes you further away from that; you think that being the kind of guy who produces good outcomes is more important, and that lying helps you do that.\r\n</p>\r\n<p>I can hear you saying something like \"this whole section is really lame and non-specific!\", but I assure you that's not my fault. It turns out the whole field of virtue ethics is basically something like \"good people do things that good people do!\", where \"good\" is defined in a way much closer to <i>successful and satisfied</i>. Essentially it asks you to imagine what you want people to say at your funeral, and work backwards from there. Whether you do this by imagining an idealized version of yourself or by following in the footsteps of an impressive rolemodel Wenceslas-style is mostly left up to you.\r\n</p>\r\n<p>Most of this description is going to be copied to a few other variants on this theme with some minor tweaks. Don't be peeved at me. \r\n</p>\r\n<p>\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n\r\n\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2>You are a Ideal-Seeking Anti-Lie Realist.</h2>\r\n\r\n<p>Basically you don't think lying is wrong so much as you think that people who lie aren't living their best lives or being the best people they could be. As opposed to more absolutist versions of this general view on honesty, you don't think that this is universal; as opposed to more lax versions, you still think that lying is generally bad even if there's exceptions. Sometimes, you feel, a lie could be good if the situation called for it. But if you find that it calls for it a lot, you would introspect; after all, is the ideal person a known habitual liar?\r\n</p>\r\n<p>There's a passage of the Bible (the book of James) that talks a bit about how works don't grant Christian salvation, but the kind of Faith that does grant access to salvation has other implications, one of which is motivating works. Your approach to lying is sort of like that; you don't care about lying that much, but you do care about being a really top-notch guy. If it turns out that really top-notch guys don't lie a lot (and you don't think they do), that motivates you to lie less without actually convincing you that lies are the problem. \r\n</p>\r\n<p>I can hear you saying something like \"this whole section is really lame and non-specific!\", but I assure you that's not my fault. It turns out the whole field of virtue ethics is basically something like \"good people do things that good people do!\", where \"good\" is defined in a way much closer to <i>successful and satisfied</i>. Essentially it asks you to imagine what you want people to say at your funeral, and work backwards from there. Whether you do this by imagining an idealized version of yourself or by following in the footsteps of an impressive rolemodel Wenceslas-style is mostly left up to you.\r\n</p>\r\n<p>Most of this description is going to be copied to a few other variants on this theme with some minor tweaks. Don't be peeved at me. \r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=Start>I want to try again! Back to the top!</Link>\r\n</Exits>\r\n<a href=https://residentcontrarian.com>I want to hear your post-writing-this thoughts! Back to the blog!</a>\r\n","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>So you have this version of yourself as you will eventually ideally be, and You look to what they do and imitate them. Got it. But the next relevant thing seems to be asking this: What kind of person are they? \r\n</p>\r\n<p>In this case, we could make arguments in favor of lying by saying \"My future self would probably err towards honesty here for the sake of being a reliable person.\". Or \"My future self would seek to peacekeep\", or even \"My future self tends to avoid hard truths at all costs because X\" where X is any reasoning that thinks that James should figure out about soap on his own time.\r\n</p>\r\n<p>What's the preference here?\r\n</p>\r\n<p>(Full disclosure: It doesn't matter that you picked an actual or theoretical third party here; it leads to the same options as if you didn't. I just wanted you to think about it.)\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=virneverlie>They NEVER lie. They are a perfect person.</Link>\r\n\t<Link to=virseldomlie>They RARELY lies. They are a perfect person who adjusts his actions to suit the situation, but he has a strong bias towards truth.</Link>\r\n\t<Link to=viroftenlie>They OFTEN lie. They are a perfect person who considers things situationally, and acts mostly in accordance to what they think will produce great outcomes</Link>\r\n</Exits>","<script>\r\n\timport Action from './helpers/Action.svelte'\r\n\timport Blue from './helpers/Blue.svelte'\r\n\timport Exits from './helpers/Exits.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\r\n</script>\r\n\r\n<h2></h2>\r\n\r\n<p>OK, so imagine you are at a party, and James, a gross person, is asking you why the host didn't invite him to the party and he had to find out about it by seeing a bouncy castle as he drove by in his smelly, terrible car. James is the worst. Everyone knows it. You know it, the host knows it, the flies know it.\r\n</p>\r\n<p>Regardless of what you do and don't tell him, how are you making that decision?\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n<p>\r\n</p>\r\n\r\n<Exits>\r\n\t<Link to=virself>I'm trying to figure out what the best version of myself would do. Like, I have a certain version of myself I hope to someday be, and I look for the action that works towards making me that person.</Link>\r\n\t<Link to=virhero>I imagine a heroically good person, real or hypothetical and then try to imagine what they'd do, and do that.</Link>\r\n\t<Link to=verminism>I try to think of what would be best for James - to nurture him, to help him to grow, and to get him to bathe.</Link>\r\n</Exits>\r\n","<button on:click>\r\n\t<slot></slot>\r\n</button>\r\n\r\n<style>\r\n\tbutton {\r\n\t\tcursor: pointer;\r\n\t\tcolor: var(--blue);\r\n\t\ttext-decoration: underline;\r\n\t\tbackground: transparent;\r\n\t\tborder: none;\r\n\t\tpadding: 0;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport Button from './ButtonThatLooksLikeALink.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\tconst item_names = {\r\n\t\teyeglasses_case: `Eyeglasses case`,\r\n\t\tcat_eye_glasses: `Cat-eye glasses`,\r\n\t\tbucket: `Bucket`,\r\n\t\tbroom: `Broom`,\r\n\t\thomework: `Homework`,\r\n\t\tbook: `Book`,\r\n\t}\r\n\r\n\t$: inventory = Object.entries(item_names).map(([ identifier, name ]) => ({\r\n\t\tname,\r\n\t\tcarrying: $state.carrying[identifier],\r\n\t}))\r\n</script>\r\n\r\n<h2>Inventory</h2>\r\n\r\n<ul>\r\n\t{#each inventory as { name, carrying }}\r\n\t\t<li>\r\n\t\t\t<span data-carrying={carrying}>\r\n\t\t\t\t<span class=\"bullet\">\r\n\t\t\t\t\t{#if carrying}\r\n\t\t\t\t\t\t🅇\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t⃞\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t{name}\r\n\t\t\t</span>\r\n\t\t</li>\r\n\t{/each}\r\n</ul>\r\n\r\n<div>\r\n\t{#if history.length > 1}\r\n\t\t<Button on:click={() => history.back()} class=looks_like_a_link>\r\n\t\t\tClose Inventory\r\n\t\t</Button>\r\n\t{:else}\r\n\t\t<Link to=Start>\r\n\t\t\tClose Inventory\r\n\t\t</Link>\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\tul {\r\n\t\tpadding: 0;\r\n\t\tlist-style-type: none;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 8px;\r\n\t}\r\n\r\n\t[data-carrying=true] {\r\n\t\tfont-weight: 700;\r\n\t}\r\n\t[data-carrying=true] .bullet {\r\n\t\tcolor: var(--green);\r\n\t}\r\n</style>\r\n","<script>\r\n\timport Button from './ButtonThatLooksLikeALink.svelte'\r\n\r\n\texport let Link, state\r\n\r\n\t$: score_opportunities = [{\r\n\t\ttext: `Retrieving the cat-eye glasses`,\r\n\t\tpoints: 5,\r\n\t\tachieved: $state.retrieved_the_cat_eye_glasses,\r\n\t}, {\r\n\t\ttext: `Sweeping up the hallway`,\r\n\t\tpoints: 1,\r\n\t\tachieved: $state.sweeped_up_the_hallway,\r\n\t}, {\r\n\t\ttext: `Rescuing the freshman`,\r\n\t\tpoints: 1,\r\n\t\tachieved: $state.rescued_the_freshman,\r\n\t}, {\r\n\t\ttext: `Returning the cat-eye glasses`,\r\n\t\tpoints: 10,\r\n\t\tachieved: $state.returned_the_cat_eye_glasses,\r\n\t}, {\r\n\t\ttext: `Unlocking your locker`,\r\n\t\tpoints: 10,\r\n\t\tachieved: $state.unlocked_your_locker,\r\n\t}, {\r\n\t\ttext: `...on the first try!`,\r\n\t\tpoints: 2,\r\n\t\tachieved: $state.unlocked_your_locker\r\n\t\t\t&& $state.locker_unlock_attempts === 1,\r\n\t}, {\r\n\t\ttext: `Handing in your English homework`,\r\n\t\tpoints: 20,\r\n\t\tachieved: $state.handed_in_your_english_homework,\r\n\t}, {\r\n\t\ttext: `Finishing without saving`,\r\n\t\tpoints: 1,\r\n\t\tachieved: $state.handed_in_your_english_homework\r\n\t\t\t&& $state.saves.length === 0,\r\n\t}]\r\n\r\n\tconst sum_points = (total, { points }) => total + points\r\n\r\n\t$: total_possible = score_opportunities.reduce(sum_points, 0)\r\n\t$: total_achieved = score_opportunities.filter(({ achieved }) => achieved)\r\n\t\t.reduce(sum_points, 0)\r\n</script>\r\n\r\n<h2>Score</h2>\r\n\r\n<ul>\r\n\t{#each score_opportunities as {text, points, achieved}}\r\n\t\t<li data-achieved={achieved}>\r\n\t\t\t<span>\r\n\t\t\t\t<span class=\"bullet\">\r\n\t\t\t\t\t{#if achieved}\r\n\t\t\t\t\t\t✔\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t•\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t{text}\r\n\t\t\t</span>\r\n\t\t\t<span class=points>\r\n\t\t\t\t{points}\r\n\t\t\t</span>\r\n\t\t</li>\r\n\t{/each}\r\n</ul>\r\n\r\n<div>\r\n\t<strong>\r\n\t\tFinal score: {total_achieved} / {total_possible}\r\n\t</strong>\r\n</div>\r\n\r\n<div>\r\n\t{#if history.length > 1}\r\n\t\t<Button on:click={() => history.back()} class=looks_like_a_link>\r\n\t\t\tClose Score\r\n\t\t</Button>\r\n\t{:else}\r\n\t\t<Link to=Start>\r\n\t\t\tClose Score\r\n\t\t</Link>\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t[data-achieved=true] {\r\n\t\tfont-weight: 700;\r\n\t}\r\n\t[data-achieved=true] .bullet {\r\n\t\tcolor: var(--green);\r\n\t}\r\n\r\n\tul {\r\n\t\tpadding: 0;\r\n\t\tlist-style-type: none;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 8px;\r\n\t}\r\n\r\n\tli {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\r\n\t.points {\r\n\t\tfont-variant-numeric: tabular-nums;\r\n\t}\r\n</style>\r\n","import * as adventure$47$Absolutes$46$svelte from '../adventure/Absolutes.svelte'\nimport * as adventure$47$Antide$46$svelte from '../adventure/Antide.svelte'\nimport * as adventure$47$Container$46$svelte from '../adventure/Container.svelte'\nimport * as adventure$47$Contrack2$46$svelte from '../adventure/Contrack2.svelte'\nimport * as adventure$47$Start$46$svelte from '../adventure/Start.svelte'\nimport * as adventure$47$burn$46$svelte from '../adventure/burn.svelte'\nimport * as adventure$47$burnburnburn$46$svelte from '../adventure/burnburnburn.svelte'\nimport * as adventure$47$cartman$46$svelte from '../adventure/cartman.svelte'\nimport * as adventure$47$conpsychic$46$svelte from '../adventure/conpsychic.svelte'\nimport * as adventure$47$contrack$46$svelte from '../adventure/contrack.svelte'\nimport * as adventure$47$contrack3$46$svelte from '../adventure/contrack3.svelte'\nimport * as adventure$47$contrack4$46$svelte from '../adventure/contrack4.svelte'\nimport * as adventure$47$conuncertain$46$svelte from '../adventure/conuncertain.svelte'\nimport * as adventure$47$detrack$46$svelte from '../adventure/detrack.svelte'\nimport * as adventure$47$detracklifelimb$46$svelte from '../adventure/detracklifelimb.svelte'\nimport * as adventure$47$detrackmitigate$46$svelte from '../adventure/detrackmitigate.svelte'\nimport * as adventure$47$detrackmuddle$46$svelte from '../adventure/detrackmuddle.svelte'\nimport * as adventure$47$detracknaziactuallylie$46$svelte from '../adventure/detracknaziactuallylie.svelte'\nimport * as adventure$47$detracknaziactuallytelltruth$46$svelte from '../adventure/detracknaziactuallytelltruth.svelte'\nimport * as adventure$47$detracksometimesyousin$46$svelte from '../adventure/detracksometimesyousin.svelte'\nimport * as adventure$47$detrackwhat$46$svelte from '../adventure/detrackwhat.svelte'\nimport * as adventure$47$detrackwhat2$46$svelte from '../adventure/detrackwhat2.svelte'\nimport * as adventure$47$detrackwhynot$46$svelte from '../adventure/detrackwhynot.svelte'\nimport * as adventure$47$detractconfork$46$svelte from '../adventure/detractconfork.svelte'\nimport * as adventure$47$knowledgedisregard$46$svelte from '../adventure/knowledgedisregard.svelte'\nimport * as adventure$47$knowledgerespect$46$svelte from '../adventure/knowledgerespect.svelte'\nimport * as adventure$47$netneglie$46$svelte from '../adventure/netneglie.svelte'\nimport * as adventure$47$nouncertainlie$46$svelte from '../adventure/nouncertainlie.svelte'\nimport * as adventure$47$oliempics$46$svelte from '../adventure/oliempics.svelte'\nimport * as adventure$47$oliempics2$46$svelte from '../adventure/oliempics2.svelte'\nimport * as adventure$47$scalesofgood$46$svelte from '../adventure/scalesofgood.svelte'\nimport * as adventure$47$thedeferential$46$svelte from '../adventure/thedeferential.svelte'\nimport * as adventure$47$thegenius$46$svelte from '../adventure/thegenius.svelte'\nimport * as adventure$47$uncertainlie$46$svelte from '../adventure/uncertainlie.svelte'\nimport * as adventure$47$uncertainlie2$46$svelte from '../adventure/uncertainlie2.svelte'\nimport * as adventure$47$verminism$46$svelte from '../adventure/verminism.svelte'\nimport * as adventure$47$virhero$46$svelte from '../adventure/virhero.svelte'\nimport * as adventure$47$virneverlie$46$svelte from '../adventure/virneverlie.svelte'\nimport * as adventure$47$viroftenlie$46$svelte from '../adventure/viroftenlie.svelte'\nimport * as adventure$47$virseldomlie$46$svelte from '../adventure/virseldomlie.svelte'\nimport * as adventure$47$virself$46$svelte from '../adventure/virself.svelte'\nimport * as adventure$47$virtrack$46$svelte from '../adventure/virtrack.svelte'\nimport * as adventure$47$helpers$47$Action$46$svelte from '../adventure/helpers/Action.svelte'\nimport * as adventure$47$helpers$47$Blue$46$svelte from '../adventure/helpers/Blue.svelte'\nimport * as adventure$47$helpers$47$ButtonThatLooksLikeALink$46$svelte from '../adventure/helpers/ButtonThatLooksLikeALink.svelte'\nimport * as adventure$47$helpers$47$Exits$46$svelte from '../adventure/helpers/Exits.svelte'\nimport * as adventure$47$helpers$47$Inventory$46$svelte from '../adventure/helpers/Inventory.svelte'\nimport * as adventure$47$helpers$47$Save$46$svelte from '../adventure/helpers/Save.svelte'\nimport * as adventure$47$helpers$47$Score$46$svelte from '../adventure/helpers/Score.svelte'\n\nexport default [\n\t{ path: 'adventure/Absolutes.svelte', export: adventure$47$Absolutes$46$svelte },\n\t{ path: 'adventure/Antide.svelte', export: adventure$47$Antide$46$svelte },\n\t{ path: 'adventure/Container.svelte', export: adventure$47$Container$46$svelte },\n\t{ path: 'adventure/Contrack2.svelte', export: adventure$47$Contrack2$46$svelte },\n\t{ path: 'adventure/Start.svelte', export: adventure$47$Start$46$svelte },\n\t{ path: 'adventure/burn.svelte', export: adventure$47$burn$46$svelte },\n\t{ path: 'adventure/burnburnburn.svelte', export: adventure$47$burnburnburn$46$svelte },\n\t{ path: 'adventure/cartman.svelte', export: adventure$47$cartman$46$svelte },\n\t{ path: 'adventure/conpsychic.svelte', export: adventure$47$conpsychic$46$svelte },\n\t{ path: 'adventure/contrack.svelte', export: adventure$47$contrack$46$svelte },\n\t{ path: 'adventure/contrack3.svelte', export: adventure$47$contrack3$46$svelte },\n\t{ path: 'adventure/contrack4.svelte', export: adventure$47$contrack4$46$svelte },\n\t{ path: 'adventure/conuncertain.svelte', export: adventure$47$conuncertain$46$svelte },\n\t{ path: 'adventure/detrack.svelte', export: adventure$47$detrack$46$svelte },\n\t{ path: 'adventure/detracklifelimb.svelte', export: adventure$47$detracklifelimb$46$svelte },\n\t{ path: 'adventure/detrackmitigate.svelte', export: adventure$47$detrackmitigate$46$svelte },\n\t{ path: 'adventure/detrackmuddle.svelte', export: adventure$47$detrackmuddle$46$svelte },\n\t{ path: 'adventure/detracknaziactuallylie.svelte', export: adventure$47$detracknaziactuallylie$46$svelte },\n\t{ path: 'adventure/detracknaziactuallytelltruth.svelte', export: adventure$47$detracknaziactuallytelltruth$46$svelte },\n\t{ path: 'adventure/detracksometimesyousin.svelte', export: adventure$47$detracksometimesyousin$46$svelte },\n\t{ path: 'adventure/detrackwhat.svelte', export: adventure$47$detrackwhat$46$svelte },\n\t{ path: 'adventure/detrackwhat2.svelte', export: adventure$47$detrackwhat2$46$svelte },\n\t{ path: 'adventure/detrackwhynot.svelte', export: adventure$47$detrackwhynot$46$svelte },\n\t{ path: 'adventure/detractconfork.svelte', export: adventure$47$detractconfork$46$svelte },\n\t{ path: 'adventure/knowledgedisregard.svelte', export: adventure$47$knowledgedisregard$46$svelte },\n\t{ path: 'adventure/knowledgerespect.svelte', export: adventure$47$knowledgerespect$46$svelte },\n\t{ path: 'adventure/netneglie.svelte', export: adventure$47$netneglie$46$svelte },\n\t{ path: 'adventure/nouncertainlie.svelte', export: adventure$47$nouncertainlie$46$svelte },\n\t{ path: 'adventure/oliempics.svelte', export: adventure$47$oliempics$46$svelte },\n\t{ path: 'adventure/oliempics2.svelte', export: adventure$47$oliempics2$46$svelte },\n\t{ path: 'adventure/scalesofgood.svelte', export: adventure$47$scalesofgood$46$svelte },\n\t{ path: 'adventure/thedeferential.svelte', export: adventure$47$thedeferential$46$svelte },\n\t{ path: 'adventure/thegenius.svelte', export: adventure$47$thegenius$46$svelte },\n\t{ path: 'adventure/uncertainlie.svelte', export: adventure$47$uncertainlie$46$svelte },\n\t{ path: 'adventure/uncertainlie2.svelte', export: adventure$47$uncertainlie2$46$svelte },\n\t{ path: 'adventure/verminism.svelte', export: adventure$47$verminism$46$svelte },\n\t{ path: 'adventure/virhero.svelte', export: adventure$47$virhero$46$svelte },\n\t{ path: 'adventure/virneverlie.svelte', export: adventure$47$virneverlie$46$svelte },\n\t{ path: 'adventure/viroftenlie.svelte', export: adventure$47$viroftenlie$46$svelte },\n\t{ path: 'adventure/virseldomlie.svelte', export: adventure$47$virseldomlie$46$svelte },\n\t{ path: 'adventure/virself.svelte', export: adventure$47$virself$46$svelte },\n\t{ path: 'adventure/virtrack.svelte', export: adventure$47$virtrack$46$svelte },\n\t{ path: 'adventure/helpers/Action.svelte', export: adventure$47$helpers$47$Action$46$svelte },\n\t{ path: 'adventure/helpers/Blue.svelte', export: adventure$47$helpers$47$Blue$46$svelte },\n\t{ path: 'adventure/helpers/ButtonThatLooksLikeALink.svelte', export: adventure$47$helpers$47$ButtonThatLooksLikeALink$46$svelte },\n\t{ path: 'adventure/helpers/Exits.svelte', export: adventure$47$helpers$47$Exits$46$svelte },\n\t{ path: 'adventure/helpers/Inventory.svelte', export: adventure$47$helpers$47$Inventory$46$svelte },\n\t{ path: 'adventure/helpers/Save.svelte', export: adventure$47$helpers$47$Save$46$svelte },\n\t{ path: 'adventure/helpers/Score.svelte', export: adventure$47$helpers$47$Score$46$svelte }\n]\n","import Wrapper from './Wrapper.svelte'\r\n\r\nimport { param_store, object_serializer_store } from './url_store.js'\r\nimport rot13 from './rot13.js'\r\nimport { to_obfuscated_json, from_obfuscated_json } from './state_serialization.mjs'\r\n\r\nimport all_cyoa_components from './globbed_adventure.js'\r\n\r\nconst basename = path => {\r\n\tconst file = path.split(/[\\/\\\\]/g).pop()\r\n\treturn file.split(`.`).slice(0, -1).join(`.`)\r\n}\r\n\r\nconst start_import = all_cyoa_components.find(({ path }) => path.endsWith(`Start.svelte`))\r\nconst container_import = all_cyoa_components.find(({ path }) => path.endsWith(`Container.svelte`))\r\n\r\nif (!start_import) {\r\n\tconsole.error(`You need a \"Start.svelte\" file`)\r\n} else if (!container_import) {\r\n\tconsole.error(`You need a \"Container.svelte\" file`)\r\n} else {\r\n\tconst name_to_id = Object.fromEntries(all_cyoa_components.map(({ path }) => {\r\n\t\tconst name = basename(path)\r\n\r\n\t\treturn [\r\n\t\t\tname,\r\n\t\t\trot13(name),\r\n\t\t]\r\n\t}))\r\n\r\n\tconst id_to_name = Object.fromEntries(all_cyoa_components.map(({ path }) => {\r\n\t\tconst name = basename(path)\r\n\r\n\t\treturn [\r\n\t\t\trot13(name),\r\n\t\t\tname,\r\n\t\t]\r\n\t}))\r\n\r\n\tconst id_to_component = Object.fromEntries(all_cyoa_components.map(({ path, export: { default: component } }) => {\r\n\t\tconst name = basename(path)\r\n\t\tconst id = name_to_id[name]\r\n\r\n\t\treturn [\r\n\t\t\tid,\r\n\t\t\tcomponent,\r\n\t\t]\r\n\t}))\r\n\r\n\tnew Wrapper({\r\n\t\ttarget: document.body,\r\n\t\tprops: {\r\n\t\t\tContainer: container_import.export.default,\r\n\t\t\tname_to_id,\r\n\t\t\tid_to_name,\r\n\t\t\tid_to_component,\r\n\t\t\tpage_id_param: param_store({ param_name: `page` }),\r\n\t\t\tadventure_state: object_serializer_store({\r\n\t\t\t\tparam_name: `state`,\r\n\t\t\t\treplace: true,\r\n\t\t\t\tdefault_values: start_import.export.initial_state,\r\n\t\t\t\tserialize: to_obfuscated_json,\r\n\t\t\t\tdeserialize: from_obfuscated_json,\r\n\t\t\t}),\r\n\t\t},\r\n\t})\r\n}\r\n"],"names":["create_if_block_1","create_if_block"],"mappings":"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"}